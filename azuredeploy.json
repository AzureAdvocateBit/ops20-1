{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_teams_name": {
            "defaultValue": "teams",
            "type": "String",
            "metadata": {
			"description": "MS Teams Connection Name - DO NOT CHANGE"
            }
        },
        "logicApp": {
            "defaultValue": "null",
            "type": "String"
        },
        "tableConnectionName": {
            "defaultValue": "azuretables",
            "type": "String"
        },
        "storageAccountName": {
            "defaultValue": "null",
            "type": "String"
        },
        "devopsConnectionName": {
            "defaultValue": "visualstudioteamservices",
            "type": "String"
        },
        "azureDevopsOrgName": {
			"type": "string",
			"metadata": {
			"description": "Azure DevOps organiztion name."
			}
		},
		"azureDevopsProject": {
			"type": "string",
			"metadata": {
			"description": "Name of the Azure DevOps Project."
			}
		}
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccountName')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('tableConnectionName')]",
            "location": "westus",
            "properties": {
                "displayName": "oncall",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/5a8d1e52-ed1a-4ec6-a9e3-3995093ff6a0/providers/Microsoft.Web/locations/westus/managedApis/azuretables"
                }
            }
        },
        {
		"name": "[parameters('azureDevopsOrgName')]",
		"type": "microsoft.visualstudio/account",
		"apiVersion": "2014-04-01-preview",
		"location": "centralus",
		"properties": {
			"operationType": "Create",
			"accountName": "[parameters('azureDevopsOrgName')]"
		},
		"resources": [{
			"name": "[parameters('azureDevopsProject')]",
			"type": "project",
			"apiVersion": "2014-04-01-preview",
			"dependsOn": [
				"[concat('microsoft.visualstudio/account/', parameters('azureDevopsOrgName'))]"
			],
			"location": "centralus",
			"properties": {
				"versionControlOption": "Git"
			}
		}]
	},
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_teams_name')]",
            "location": "westus",
            "properties": {
                "displayName": "jahand@microsoft.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/5a8d1e52-ed1a-4ec6-a9e3-3995093ff6a0/providers/Microsoft.Web/locations/westus/managedApis/', parameters('connections_teams_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('devopsConnectionName')]",
            "location": "westus",
            "properties": {
                "displayName": "jahand@microsoft.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/5a8d1e52-ed1a-4ec6-a9e3-3995093ff6a0/providers/Microsoft.Web/locations/westus/managedApis/', parameters('devopsConnectionName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicApp')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('tableConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_teams_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('devopsConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "alertContext": {
                                            "properties": {
                                                "AffectedConfigurationItems": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "AlertType": {
                                                    "type": "string"
                                                },
                                                "IncludedSearchResults": {
                                                    "type": "string"
                                                },
                                                "LinkToSearchResults": {
                                                    "type": "string"
                                                },
                                                "Operator": {
                                                    "type": "string"
                                                },
                                                "ResultCount": {
                                                    "type": "integer"
                                                },
                                                "SearchIntervalDurationMin": {
                                                    "type": "string"
                                                },
                                                "SearchIntervalEndtimeUtc": {
                                                    "type": "string"
                                                },
                                                "SearchIntervalInMinutes": {
                                                    "type": "string"
                                                },
                                                "SearchIntervalStartTimeUtc": {
                                                    "type": "string"
                                                },
                                                "SearchQuery": {
                                                    "type": "string"
                                                },
                                                "SearchResult": {
                                                    "properties": {
                                                        "dataSources": {
                                                            "items": {
                                                                "properties": {
                                                                    "resourceId": {
                                                                        "type": "string"
                                                                    },
                                                                    "tables": {
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "resourceId",
                                                                    "tables"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "tables": {
                                                            "items": {
                                                                "properties": {
                                                                    "columns": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "type"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "rows": {
                                                                        "items": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name",
                                                                    "columns",
                                                                    "rows"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "SeverityDescription": {
                                                    "type": "string"
                                                },
                                                "Threshold": {
                                                    "type": "integer"
                                                },
                                                "WorkspaceId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_a_channel": {
                            "runAfter": {
                                "Create_a_work_item": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "displayName": "📟 Incident -  @{body('Create_a_work_item')?['id']} (@{rand(1, 30000)})"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/groups/@{encodeURIComponent('5053167b-f5fb-4b5d-95b1-e256b1bcfcdb')}/channels"
                            }
                        },
                        "Create_a_work_item": {
                            "runAfter": {
                                "Response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "title": "@{triggerBody()?['alertContext']?['AlertType']} - Severity: @{triggerBody()?['alertContext']?['SeverityDescription']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                    }
                                },
                                "method": "patch",
                                "path": "/@{encodeURIComponent('ops200bb5')}/_apis/wit/workitems/$@{encodeURIComponent('Issue')}",
                                "queries": {
                                    "account": "[parameters('azureDevopsOrgName')]"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Update_a_work_item_2": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "userEnteredFields": {
                                                "Assigned To": "@items('For_each')['email']"
                                            }
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/_apis/wit/workitems/@{encodeURIComponent(body('Update_a_work_item')?['id'])}",
                                        "queries": {
                                            "account": "[parameters('azureDevopsOrgName')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_entities": {
                            "runAfter": {
                                "Update_a_work_item": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuretables_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Tables/@{encodeURIComponent('oncall')}/entities",
                                "queries": {
                                    "$filter": "oncall eq true",
                                    "$select": "email"
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Get_entities": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_entities')?['value']",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "email": {
                                                "type": "string"
                                            },
                                            "odata.etag": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "odata.etag",
                                            "email"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "Post_a_message_as_the_Flow_bot_to_a_channel": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "messageBody": "<img src=\"https://thumbs.gfycat.com/DelayedVacantDassie-max-1mb.gif\" alt=\"Alert\" height=\"42\" width=\"42\"> <br />\n\n<a href=\"https://shenzhenops20test.visualstudio.com/shenzhenops20test/_workitems/edit/@{body('Update_a_work_item')?['id']}/\">Incident @{body('Update_a_work_item')?['id']}</a><br />\n<br />\n\n@{triggerBody()?['alertContext']?['AlertType']} : @{triggerBody()?['alertContext']?['SeverityDescription']}<br />\n<br />",
                                    "recipient": {
                                        "channelId": "@body('Create_a_channel')?['id']"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/flowbot/actions/notification/recipienttypes/channel",
                                "queries": {
                                    "groupId": "5053167b-f5fb-4b5d-95b1-e256b1bcfcdb"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {},
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "OPS20 - Responding To Incidents Demo 1 - Last one tonight",
                                "statusCode": 200
                            }
                        },
                        "Update_a_work_item": {
                            "runAfter": {
                                "Create_a_channel": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "userEnteredFields": {
                                        "Description": "<a href=\"https://teams.microsoft.com/l/0channel/@{body('Create_a_channel')?['id']}/Active%2520Incident%2520@{body('Create_a_work_item')?['id']}?groupId=042fcb78-dd7d-4300-84c2-1515890c1697&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47\">Communications Channel</a>"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['visualstudioteamservices']['connectionId']"
                                    }
                                },
                                "method": "patch",
                                "path": "/_apis/wit/workitems/@{encodeURIComponent(body('Create_a_work_item')?['id'])}",
                                "queries": {
                                    "account": "[parameters('azureDevopsOrgName')]",
                                    "project": "[parameters('azureDevopsOrgName')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuretables_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('tableConnectionName'))]",
                                "connectionName": "azuretables",
                                "id": "/subscriptions/5a8d1e52-ed1a-4ec6-a9e3-3995093ff6a0/providers/Microsoft.Web/locations/westus/managedApis/azuretables"
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_teams_name'))]",
                                "connectionName": "teams",
                                "id": "/subscriptions/5a8d1e52-ed1a-4ec6-a9e3-3995093ff6a0/providers/Microsoft.Web/locations/westus/managedApis/teams"
                            },
                            "visualstudioteamservices": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('devopsConnectionName'))]",
                                "connectionName": "visualstudioteamservices",
                                "id": "/subscriptions/5a8d1e52-ed1a-4ec6-a9e3-3995093ff6a0/providers/Microsoft.Web/locations/westus/managedApis/visualstudioteamservices"
                            }
                        }
                    }
                }
            }
        }
    ]
}